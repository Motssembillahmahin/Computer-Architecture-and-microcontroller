;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 2/26/2023 3:36:53 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2820      	GOTO       32
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x0833      	MOVF       ___DoICPAddr+1, 0
0x0006	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0007	0x0832      	MOVF       ___DoICPAddr, 0
0x0008	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0009	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x000A	0x2003      	CALL       _____DoICP
0x000B	0x118A      	BCF        PCLATH, 3
0x000C	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x000D	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x000E	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x000F	0x0AB2      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0010	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0011	0x0AB3      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0012	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0013	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0014	0x280A      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0015	0x0008      	RETURN
; end of ___CC2DW
_MSDelay:
;dotmatrix.c,8 :: 		void MSDelay()//Delay function
;dotmatrix.c,11 :: 		for(y = 0;y<60;y++);//For loop for delay
0x0016	0x1283      	BCF        STATUS, 5
0x0017	0x1303      	BCF        STATUS, 6
0x0018	0x01F1      	CLRF       R1
L_MSDelay0:
0x0019	0x303C      	MOVLW      60
0x001A	0x0271      	SUBWF      R1, 0
0x001B	0x1803      	BTFSC      STATUS, 0
0x001C	0x281F      	GOTO       L_MSDelay1
0x001D	0x0AF1      	INCF       R1, 1
0x001E	0x2819      	GOTO       L_MSDelay0
L_MSDelay1:
;dotmatrix.c,12 :: 		}
L_end_MSDelay:
0x001F	0x0008      	RETURN
; end of _MSDelay
_main:
0x0020	0x3080      	MOVLW      128
0x0021	0x1283      	BCF        STATUS, 5
0x0022	0x1303      	BCF        STATUS, 6
0x0023	0x00A0      	MOVWF      _COL_Data
0x0024	0x3040      	MOVLW      64
0x0025	0x00A1      	MOVWF      33
0x0026	0x3020      	MOVLW      32
0x0027	0x00A2      	MOVWF      34
0x0028	0x3010      	MOVLW      16
0x0029	0x00A3      	MOVWF      35
0x002A	0x3008      	MOVLW      8
0x002B	0x00A4      	MOVWF      36
0x002C	0x3004      	MOVLW      4
0x002D	0x00A5      	MOVWF      37
0x002E	0x3002      	MOVLW      2
0x002F	0x00A6      	MOVWF      38
0x0030	0x3001      	MOVLW      1
0x0031	0x00A7      	MOVWF      39
0x0032	0x307E      	MOVLW      126
0x0033	0x00A8      	MOVWF      _ROW_Data
0x0034	0x3081      	MOVLW      129
0x0035	0x00A9      	MOVWF      41
0x0036	0x3081      	MOVLW      129
0x0037	0x00AA      	MOVWF      42
0x0038	0x3085      	MOVLW      133
0x0039	0x00AB      	MOVWF      43
0x003A	0x3046      	MOVLW      70
0x003B	0x00AC      	MOVWF      44
0x003C	0x01AD      	CLRF       45
0x003D	0x01AE      	CLRF       46
0x003E	0x01AF      	CLRF       47
0x003F	0x01B0      	CLRF       48
0x0040	0x01B1      	CLRF       49
;dotmatrix.c,13 :: 		void main() //main function
;dotmatrix.c,15 :: 		TRISC = 0x00; //Define PORTC as output
0x0041	0x1683      	BSF        STATUS, 5
0x0042	0x0187      	CLRF       TRISC
;dotmatrix.c,16 :: 		TRISD = 0x00; //define portd as output
0x0043	0x0188      	CLRF       TRISD
;dotmatrix.c,17 :: 		RData = 0; //aasigned intial value as zero
0x0044	0x1283      	BCF        STATUS, 5
0x0045	0x01B5      	CLRF       _RData
;dotmatrix.c,18 :: 		CData = 0; //assigned intial value as zero
0x0046	0x01B6      	CLRF       _CData
;dotmatrix.c,19 :: 		Nex = 0;//Assigned intial value 0
0x0047	0x01B7      	CLRF       _Nex
;dotmatrix.c,20 :: 		while(1)
L_main3:
;dotmatrix.c,22 :: 		for(Del = 0; Del<5;Del++)  //delay for next character Data
0x0048	0x01B4      	CLRF       _Del
L_main5:
0x0049	0x3005      	MOVLW      5
0x004A	0x0234      	SUBWF      _Del, 0
0x004B	0x1803      	BTFSC      STATUS, 0
0x004C	0x286E      	GOTO       L_main6
;dotmatrix.c,24 :: 		for(CData = 0;CData <8;CData++)//for loop for moving character
0x004D	0x01B6      	CLRF       _CData
L_main8:
0x004E	0x3008      	MOVLW      8
0x004F	0x0236      	SUBWF      _CData, 0
0x0050	0x1803      	BTFSC      STATUS, 0
0x0051	0x2865      	GOTO       L_main9
;dotmatrix.c,26 :: 		COL = COL_Data[CData];//find code and send data to column
0x0052	0x0836      	MOVF       _CData, 0
0x0053	0x3E20      	ADDLW      _COL_Data
0x0054	0x0084      	MOVWF      FSR
0x0055	0x0800      	MOVF       INDF, 0
0x0056	0x0088      	MOVWF      PORTD
;dotmatrix.c,27 :: 		ROW = ROW_Data[RData]; //find code and send data to Row
0x0057	0x0835      	MOVF       _RData, 0
0x0058	0x3E28      	ADDLW      _ROW_Data
0x0059	0x0084      	MOVWF      FSR
0x005A	0x0800      	MOVF       INDF, 0
0x005B	0x0087      	MOVWF      PORTC
;dotmatrix.c,28 :: 		MSDelay();   //Delay
0x005C	0x2016      	CALL       _MSDelay
;dotmatrix.c,29 :: 		RData++;  //increament Rdata
0x005D	0x0AB5      	INCF       _RData, 1
;dotmatrix.c,30 :: 		if(RData == 10) RData = 0;
0x005E	0x0835      	MOVF       _RData, 0
0x005F	0x3A0A      	XORLW      10
0x0060	0x1D03      	BTFSS      STATUS, 2
0x0061	0x2863      	GOTO       L_main11
0x0062	0x01B5      	CLRF       _RData
L_main11:
;dotmatrix.c,24 :: 		for(CData = 0;CData <8;CData++)//for loop for moving character
0x0063	0x0AB6      	INCF       _CData, 1
;dotmatrix.c,31 :: 		}
0x0064	0x284E      	GOTO       L_main8
L_main9:
;dotmatrix.c,32 :: 		RData = Nex;
0x0065	0x0837      	MOVF       _Nex, 0
0x0066	0x00B5      	MOVWF      _RData
;dotmatrix.c,33 :: 		if(Nex == 10) Nex = 0;
0x0067	0x0837      	MOVF       _Nex, 0
0x0068	0x3A0A      	XORLW      10
0x0069	0x1D03      	BTFSS      STATUS, 2
0x006A	0x286C      	GOTO       L_main12
0x006B	0x01B7      	CLRF       _Nex
L_main12:
;dotmatrix.c,22 :: 		for(Del = 0; Del<5;Del++)  //delay for next character Data
0x006C	0x0AB4      	INCF       _Del, 1
;dotmatrix.c,34 :: 		}
0x006D	0x2849      	GOTO       L_main5
L_main6:
;dotmatrix.c,35 :: 		Nex++;
0x006E	0x0AB7      	INCF       _Nex, 1
;dotmatrix.c,36 :: 		RData = Nex;
0x006F	0x0837      	MOVF       _Nex, 0
0x0070	0x00B5      	MOVWF      _RData
;dotmatrix.c,37 :: 		}
0x0071	0x2848      	GOTO       L_main3
;dotmatrix.c,38 :: 		}
L_end_main:
0x0072	0x2872      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [7]    _____DoICP
0x000A      [12]    ___CC2DW
0x0016      [10]    _MSDelay
0x0020      [83]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x0020       [8]    _COL_Data
0x0028      [10]    _ROW_Data
0x0032       [2]    ___DoICPAddr
0x0034       [1]    _Del
0x0035       [1]    _RData
0x0036       [1]    _CData
0x0037       [1]    _Nex
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0087       [1]    TRISC
0x0088       [1]    TRISD
